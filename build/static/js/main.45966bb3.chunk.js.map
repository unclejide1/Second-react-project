{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storename","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","fishes","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","console","log","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.45966bb3.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react'\r\nimport {getFunName} from '../helpers'\r\n\r\nclass StorePicker extends React.Component{\r\n    myInput = React.createRef();\r\n\r\n    goToStore = event =>{\r\n        //1. stop the form from submitting\r\n        event.preventDefault()\r\n        //2 get the text from the input\r\n        const storename= this.myInput.current.value\r\n        //3 change the page to /store/whatever-they-entered\r\n        this.props.history.push(`/store/${storename}`)\r\n        \r\n    }\r\n    render () {\r\n        return (\r\n            \r\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n            <h2>Please Enter A Store</h2>\r\n            <input type=\"text\"\r\n            ref={this.myInput}\r\n            required \r\n            placeholder=\" Store Name\"\r\n            defaultValue= {getFunName()}/>\r\n            <button type =\"submit\"> Visit Store</button>\r\n        </form>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default StorePicker","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n    <header className=\"top\">\r\n        <h1>\r\n             Catch \r\n             <span className=\"ofThe\">\r\n            <span className=\"of\">of</span>\r\n            <span className=\"the\">The</span>\r\n            </span>\r\n            Day</h1>\r\n        <h3 className=\"tagline\">\r\n<span>{props.tagline}</span>\r\n    </h3>\r\n    </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component{\r\n    nameRef = React.createRef()\r\n    priceRef = React.createRef()\r\n    statusRef = React.createRef()\r\n    descRef = React.createRef()\r\n    imageRef = React.createRef()\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = (event) => {\r\n        //1. stop the form from submitting\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        }\r\n        this.props.addFish(fish)\r\n        //refresh the form\r\n        event.currentTarget.reset();\r\n    }\r\n    render (){\r\nreturn (\r\n    <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\r\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\r\n        <select name=\"status\" ref={this.statusRef}>\r\n        <option value=\"available\">Fresh</option>\r\n        <option value=\"unavailable\">Sold out</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef}placeholder=\"Desc\"/>\r\n        <input name=\"image\" type=\"text\"  ref={this.imageRef}placeholder=\"Image\"/>\r\n        <button type=\"submit\">+ Add Fish</button>\r\n    </form>\r\n    \r\n)\r\n    }\r\n}\r\n\r\nexport default AddFishForm","import React from 'react';\r\n\r\nclass EditFishForm extends React.Component{\r\n\r\n    handleChange = (event) => {\r\n        \r\n        //update that fish\r\n        //1. Take a copy of the current fish\r\n        const updatedFish = {...this.props.fish,\r\n        [event.currentTarget.name]: event.currentTarget.value}\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    }\r\n    render(){\r\n        return <div className=\"fish-edit\">\r\n            <input type=\"text\" name=\"name\" onChange = {this.handleChange} value={this.props.fishes.name}/>\r\n            <input type=\"text\" name=\"price\" onChange = {this.handleChange} value={this.props.fishes.price}/>\r\n            <select type=\"text\" onChange = {this.handleChange} value = {this.props.fishes.status} name=\"status\" >\r\n            <option value=\"available\">Fresh</option>\r\n            <option value=\"unavailable\">Sold out</option>\r\n            </select>\r\n            <textarea name=\"desc\" onChange = {this.handleChange} value={this.props.fishes.desc}/>\r\n            <input type=\"text\" name=\"image\" onChange = {this.handleChange} value={this.props.fishes.image}/>\r\n            <button onClick={()=> this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default EditFishForm; ","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in Manage your store's Inventory</p>\r\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log in With Github</button>\r\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log in With Facebook</button>\r\n    </nav>\r\n)\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login","import Rebase from \"re-base\"\r\nimport firebase from \"firebase\"\r\n\r\nconst firebaseApp  = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD5SdLEaqVAg8FS58KWC-Qj0TW4xZGzD9U\",\r\n    authDomain: \"catch-of-the-day-jide.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-jide.firebaseio.com\"\r\n})\r\n\r\n\r\nconst base = Rebase.createClass(firebaseApp.database())\r\n\r\n//this is a named export\r\nexport {firebaseApp};\r\n\r\n// this a default export\r\nexport default base;","import React from 'react'\r\nimport AddFishForm from './AddFishForm'\r\nimport EditFishForm from './EditFishForm'\r\nimport Login from './Login';\r\nimport base, { firebaseApp} from '../base';\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component{\r\nstate = {\r\n    uid: null,\r\n    owner: null\r\n}\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(user =>{\r\n            if(user){\r\n                this.authHandler({user});\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    authHandler = async(authData) => {\r\n        //1. Look up the current store in the firebase\r\n        const store = await base.fetch(this.props.storeId, {context: this});\r\n        //2. claim it if there is no owner\r\n        if(!store.owner){\r\n            //save store as the owner's\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n        console.log(store)\r\n        //3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner ||authData.user.uid\r\n        })\r\n        // console.log(authData);\r\n    } \r\n\r\n    authenticate = provider => {\r\n         const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n         firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    }\r\n\r\n    logout = async () => {\r\n        await firebase.auth().signOut();\r\n        this.setState({uid:null});\r\n    }\r\n    render (){\r\n        const logout = <button onClick={this.logout}>Log Out!</button>\r\n        // check if user is logged in\r\n        if(!this.state.uid){\r\n            return <Login authenticate = {this.authenticate}/>\r\n        }\r\n        //check if they are the owner of the store\r\n        if(this.state.uid !== this.state.owner){\r\n            return <div><p>Sorry you are not the owner</p>\r\n        {logout}</div>\r\n        }\r\n\r\n        //if there is objection, then they are the owner\r\nreturn (\r\n    <div className=\"inventory\">\r\n       <h2>Inventory</h2> \r\n       {logout}\r\n       {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fishes = {this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish}/>)}\r\n       <AddFishForm addFish={this.props.addFish}/>\r\n       <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n    </div>\r\n    \r\n)\r\n    }\r\n}\r\n\r\nexport default Inventory","import React from 'react'\r\nimport {formatPrice} from '../helpers'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\n\r\nclass Order extends React.Component{\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key]\r\n        const count = this.props.order[key]\r\n        const isAvailable = fish &&  fish.status === 'available'\r\n        //make sure fish is loaded before we continue\r\n        if(!fish) return null;\r\n        if(!isAvailable){\r\n            return (\r\n                <CSSTransition classNames=\"order\" key = {key} timeout={{enter:250, exit:250}}>\r\n                    <li> key={key}\r\n                sorry {fish ? fish.name : 'fish'} is no longer available\r\n            </li>\r\n            </CSSTransition >)\r\n        }\r\n    return (\r\n        <CSSTransition classNames=\"order\" key = {key} timeout={{enter:250, exit:250}}>\r\n    <li key={key}> \r\n    <span>\r\n        <TransitionGroup component=\"span\" className=\"count\">\r\n            <CSSTransition classNames=\"count\" key={count} timeout={{enter:250, exit:250}}>\r\n            <span>{count}</span>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    \r\n     lbs {fish.name}<small>      </small>     \r\n    {formatPrice( count * fish.price)} <button onClick={ () => this.props.removeFromOrder(key)}>&times;</button>\r\n    </span>\r\n    </li>\r\n    </CSSTransition>\r\n     ) };\r\n    render (){\r\n        \r\n        const orderIds = Object.keys(this.props.order)\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key]\r\n            const count = this.props.order[key]\r\n            const isAvailable = fish && fish.status === 'available'\r\n            if(isAvailable){\r\n                return prevTotal + (count * fish.price)\r\n            }\r\n        }, 0)\r\nreturn (\r\n    <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n{orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        \r\n        <div className = \"total\">\r\n            Total:\r\n            <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n    </div>\r\n    \r\n)\r\n    }\r\n}\r\n\r\nexport default Order","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\"\r\n\r\nclass Fish extends React.Component{\r\n    static propTypes = {\r\n        details:PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    }\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index)\r\n    }\r\n    render (){\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available'\r\nreturn (\r\n    <li className=\"menu-fish\">\r\n        <img src={image} alt ={name}/>\r\n        <h3 className=\"fish-name\">\r\n            {name}\r\n            <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add To Order' : 'Sold Out'}</button>\r\n    </li> \r\n)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Fish","import React from \"react\"\r\nimport Header from './Header'\r\nimport Inventory from './Inventory'\r\nimport Order from './Order'\r\nimport sampleFishes from '../sample-fishes'\r\nimport Fish from './Fish'\r\nimport base from '../base'\r\n\r\n\r\nclass App extends React.Component {\r\n    state={\r\n        fishes: {},\r\n        order: {}\r\n    }\r\n    componentDidMount() {\r\n        const { params } = this.props.match\r\n        //first reinstate our local storage\r\n        const localStorageRef = localStorage.getItem(params.storeId)\r\n        if(localStorageRef){\r\n            this.setState({order:JSON.parse(localStorageRef)})\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: \"fishes\"\r\n          });\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"it updated\")\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        base.removeBinding(this.ref)\r\n    }\r\n    addFish = fish => {\r\n        //1. take a copy of the existing state.\r\n        const fishes = {...this.state.fishes}\r\n        // ADD new fish to fish variable\r\n        fishes[`fish${Date.now()}`] = fish\r\n        //3 set the new fishes object to state\r\n        this.setState({\r\n            fishes: fishes\r\n        })\r\n    }\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //1. Take a copy of the current state\r\n        const fishes = {...this.state.fishes};\r\n        //2. update that state\r\n        fishes[key] = updatedFish;\r\n        //3. Set that to state\r\n        this.setState({fishes});\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        //1. Take a copy of state\r\n        const fishes = {...this.state.fishes};\r\n        //2. update the state\r\n        fishes[key] = null;\r\n        //3. update state\r\n        this.setState({fishes});\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes:sampleFishes})\r\n    }\r\n\r\n    addToOrder = (key) => {\r\n        //1. take a copy of state\r\n        const order = {...this.state.order}\r\n        //2. either add to the order, or update the number in our order\r\n        order[key]=order[key] + 1 || 1;\r\n        //3. call setstate to update our stateobject\r\n        this.setState({\r\n            order: order\r\n        })\r\n    }\r\n\r\n    removeFromOrder = (key) => {\r\n        //1. take a copy of state\r\n        const order = {...this.state.order}\r\n        //2. remove item from \r\n        delete order[key];\r\n        //3. call setstate to update our stateobject\r\n        this.setState({order}) \r\n    }\r\n    render() {\r\n        return (\r\n            <div className =\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline =\"Fresh Seafood Market\"/>\r\n                    <ul className=\"fishes\">\r\n                    {Object.keys(this.state.fishes).map(key => <Fish key = {key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder}/>)}\r\n                    </ul>\r\n                </div>\r\n                <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder}/>\r\n                <Inventory addFish={this.addFish} updateFish={this.updateFish} deleteFish={this.deleteFish} loadSampleFishes={this.loadSampleFishes} fishes={this.state.fishes} \r\n                storeId = {this.props.match.params.storeId}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\"\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found!!!</h2>\r\n    </div>\r\n)\r\n\r\nexport default NotFound","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from \r\n'react-router-dom'\r\nimport StorePicker from './StorePicker'\r\nimport App from './App'\r\nimport NotFound from './NotFound'\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route  component={NotFound} />\r\n\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router","import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport StorePicker from './components/StorePicker'\r\nimport App from './components/App'\r\nimport Router from './components/Router'\r\nimport \"./css/style.css\"\r\n\r\n\r\nrender(<Router/>, document.querySelector('#main'))"],"sourceRoot":""}